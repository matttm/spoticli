CREATE TABLE USER  (
	id INT NOT NULL UNIQUE AUTO_INCREMENT,
	username VARCHAR (127) NOT NULL UNIQUE,
	password VARCHAR (127) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);
CREATE TABLE ARTIST (
	id INT NOT NULL UNIQUE AUTO_INCREMENT,
	stage_name VARCHAR (127) NOT NULL,
	user_id VARCHAR (127) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (id),
	CONSTRAINT fk_user FOREIGN KEY (user_id)  
	REFERENCES USER(id)  
	ON DELETE CASCADE  
	ON UPDATE CASCADE

);
CREATE TABLE ALBUBM (
	id INT NOT NULL UNIQUE AUTO_INCREMENT,
	title VARCHAR(25) NOT NULL,
	artist_id INT NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (id),
	CONSTRAINT fk_artist FOREIGN KEY (artist_id)  
	REFERENCES ARTIST(id)  
	ON DELETE CASCADE  
	ON UPDATE CASCADE
);
CREATE TABLE TRACK (
	id INT NOT NULL UNIQUE AUTO_INCREMENT,
	track_name VARCHAR (127) NOT NULL,
	artist_id VARCHAR (127) NOT NULL,
	album_id VARCHAR (127) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (id),
	CONSTRAINT fk_artist FOREIGN KEY (artist_id)  
	REFERENCES ARTIST(id)  
	ON DELETE CASCADE  
	ON UPDATE CASCADE,
	CONSTRAINT fk_album FOREIGN KEY (album_id)  
	REFERENCES ALBUM(id)  
	ON DELETE CASCADE  
	ON UPDATE CASCADE

);
