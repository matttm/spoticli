// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/file-meta-info_api.go
//
// Generated by this command:
//
//	mockgen -source=internal/services/file-meta-info_api.go -destination=internal/services/mocks/file-meta-info_mock.go
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	models "github.com/matttm/spoticli/spoticli-models"
	gomock "go.uber.org/mock/gomock"
)

// MockFileMetaInfoSericeApi is a mock of FileMetaInfoSericeApi interface.
type MockFileMetaInfoSericeApi struct {
	ctrl     *gomock.Controller
	recorder *MockFileMetaInfoSericeApiMockRecorder
	isgomock struct{}
}

// MockFileMetaInfoSericeApiMockRecorder is the mock recorder for MockFileMetaInfoSericeApi.
type MockFileMetaInfoSericeApiMockRecorder struct {
	mock *MockFileMetaInfoSericeApi
}

// NewMockFileMetaInfoSericeApi creates a new mock instance.
func NewMockFileMetaInfoSericeApi(ctrl *gomock.Controller) *MockFileMetaInfoSericeApi {
	mock := &MockFileMetaInfoSericeApi{ctrl: ctrl}
	mock.recorder = &MockFileMetaInfoSericeApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileMetaInfoSericeApi) EXPECT() *MockFileMetaInfoSericeApiMockRecorder {
	return m.recorder
}

// GetAllFilesOfType mocks base method.
func (m *MockFileMetaInfoSericeApi) GetAllFilesOfType(fileTypeCd int) []*models.FileMetaInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllFilesOfType", fileTypeCd)
	ret0, _ := ret[0].([]*models.FileMetaInfo)
	return ret0
}

// GetAllFilesOfType indicates an expected call of GetAllFilesOfType.
func (mr *MockFileMetaInfoSericeApiMockRecorder) GetAllFilesOfType(fileTypeCd any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllFilesOfType", reflect.TypeOf((*MockFileMetaInfoSericeApi)(nil).GetAllFilesOfType), fileTypeCd)
}

// GetFileById mocks base method.
func (m *MockFileMetaInfoSericeApi) GetFileById(id int) (*models.FileMetaInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileById", id)
	ret0, _ := ret[0].(*models.FileMetaInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileById indicates an expected call of GetFileById.
func (mr *MockFileMetaInfoSericeApiMockRecorder) GetFileById(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileById", reflect.TypeOf((*MockFileMetaInfoSericeApi)(nil).GetFileById), id)
}
