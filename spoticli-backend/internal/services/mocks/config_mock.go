// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/config_api.go
//
// Generated by this command:
//
//	mockgen -source=internal/services/config_api.go -destination=internal/services/mocks/config_mock.go
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	services "github.com/matttm/spoticli/spoticli-backend/internal/services"
	gomock "go.uber.org/mock/gomock"
)

// MockConfigServiceApi is a mock of ConfigServiceApi interface.
type MockConfigServiceApi struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceApiMockRecorder
	isgomock struct{}
}

// MockConfigServiceApiMockRecorder is the mock recorder for MockConfigServiceApi.
type MockConfigServiceApiMockRecorder struct {
	mock *MockConfigServiceApi
}

// NewMockConfigServiceApi creates a new mock instance.
func NewMockConfigServiceApi(ctrl *gomock.Controller) *MockConfigServiceApi {
	mock := &MockConfigServiceApi{ctrl: ctrl}
	mock.recorder = &MockConfigServiceApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigServiceApi) EXPECT() *MockConfigServiceApiMockRecorder {
	return m.recorder
}

// GetConfigService mocks base method.
func (m *MockConfigServiceApi) GetConfigService() *services.ConfigService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigService")
	ret0, _ := ret[0].(*services.ConfigService)
	return ret0
}

// GetConfigService indicates an expected call of GetConfigService.
func (mr *MockConfigServiceApiMockRecorder) GetConfigService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigService", reflect.TypeOf((*MockConfigServiceApi)(nil).GetConfigService))
}

// GetConfigValue mocks base method.
func (m *MockConfigServiceApi) GetConfigValue(k string) any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigValue", k)
	ret0, _ := ret[0].(any)
	return ret0
}

// GetConfigValue indicates an expected call of GetConfigValue.
func (mr *MockConfigServiceApiMockRecorder) GetConfigValue(k any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigValue", reflect.TypeOf((*MockConfigServiceApi)(nil).GetConfigValue), k)
}
